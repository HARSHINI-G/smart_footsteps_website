const chatbotToggler = document.querySelector(".chatbot-toggler");
const closeBtn = document.querySelector(".close-btn");
const chatbox = document.querySelector(".chatbox");
const chatInput = document.querySelector(".chat-input textarea");
const sendChatBtn = document.querySelector(".chat-input span");

let userMessage = null; // Variable to store user's message
const API_KEY = "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"; 
const inputInitHeight = chatInput.scrollHeight;
const predefinedMessages = [
  { question: "Hi", answer: "Hi, I am a chatbot designed to assist youðŸ˜Š \nAsk more questions like:\nHow does your chatbot work?\nWhat is this project about?\nWhat are the applications of this project?"},
  { question: "What is your name?", answer: "I am a chatbot designed to assist youðŸ˜Š\nAsk more questions like:\nHow does your chatbot work?\nWhat is this project about?\nWhat are the applications of this project?" },
  { question: "How does your chatbot work?", answer: "I use advanced natural language processing to understand and respond to your queries.\nAsk more questions like:\nWhat is this project about?:\nHow does the project work?\nWhat are the applications of this project?" },
  { question: "What is this project about?", answer: "This project focuses on generating electricity using the pressure exerted on piezoelectric sensors during footsteps. The captured energy is then stored in a rechargeable battery to power devices like mobile phones and streetlights.\nAsk more questions like:\nIs this a new concept?\nWhat are the benefits of this project?"},
  { question: "How does the project work?", answer: "We use piezoelectric sensors that convert pressure from footsteps into electricity. An Arduino Uno board controls the system and stores the electricity in a rechargeable battery.\nAsk more questions like:\nCan you explain piezoelectric sensors in more detail?\nWhat is the role of the Arduino Uno board?\nCan this project power a whole house?"},
  { question: "What are the applications of this project?", answer: "The generated electricity can be used to charge mobile phones, power streetlights, and potentially even low-power devices in remote areas.\nAsk more questions like:\nWhat are piezoelectric sensors?\nWhat is the role of the Arduino Uno board?\nHow much electricity can be generated per footstep?"},
  { question: "Is this a new concept?", answer: "Piezoelectric technology exists, but applying it to harness footstep energy is an innovative approach to renewable energy generation."},
  { question: "What are the benefits of this project?", answer: "It offers a clean and sustainable way to generate electricity from everyday activities, reducing dependence on traditional sources and potentially lowering energy costs."},
  { question: "Can you explain piezoelectric sensors in more detail?", answer: "Piezoelectric sensors are materials that generate electricity when pressure is applied. In our project, they convert the pressure from footsteps into electrical current."},
  { question: "What is the role of the Arduino Uno board?", answer: "The Arduino Uno is a microcontroller that controls the entire system. It collects the electricity generated by the sensors, manages the charging process, and potentially monitors the battery level."},
  { question: "How much electricity can be generated per footstep?", answer: "The amount of electricity generated varies depending on the pressure exerted and the type of sensor used. Our website might have more specific details about our project's output."},
  { question: "Can this project power a whole house?", answer: "Absolutely! Visit our home screen where you'll find a video showcasing our working model"},
  { question: "Is this a commercially viable solution?", answer: "While still in development, this project holds promise for future applications. We're exploring ways to improve efficiency and scalability for broader implementation."},
  { question: "What are piezoelectric sensors?", answer: "Piezoelectric sensors are materials that convert mechanical pressure into electricity. In this project, they capture the energy from footsteps."},
  { question: "What is the role of the Arduino Uno board?", answer: " The Arduino Uno is a microcontroller board that manages the collected electricity from the piezoelectric sensors. It regulates and stores the harvested energy in the battery."},
  { question: "How much electricity can be generated per footstep?", answer: "The amount of electricity generated varies based on the pressure applied. We're constantly optimizing the process to maximize energy output."},
  { question: "How does the piezoelectric sensor generate electricity?", answer: "The piezoelectric sensor generates electricity by converting mechanical pressure, such as vibrations or movements, into electrical energy."},
  { question: "What is the role of Arduino Uno in your project?", answer: "Arduino Uno acts as the controller in our project, managing the flow of electricity and ensuring efficient energy conversion from the piezoelectric sensor."},
  { question: "What are the limitations of this technology?", answer: "Current limitations include the overall energy output and scalability for large-scale applications. We're actively researching ways to overcome these challenges."},
  { question: "What devices can be powered by this project?", answer: "The project can potentially power low-power devices like mobile phones, LED lights, and small sensors. With further development, it could be used for larger applications."},
  { question: "How could this technology be used for streetlights?", answer: "By installing piezoelectric mats in high-traffic areas, we can generate electricity to power streetlights, reducing reliance on the traditional grid."},
  { question: "Are there any other potential applications for this technology?", answer: "Yes, this technology has the potential to be used in various settings, including public transportation stops, shopping malls, and even dance floors!"},
  { question: "Can this project be used in developing countries?", answer: "Absolutely! This project offers a potentially low-cost and sustainable way to generate electricity in areas with limited access to traditional grids."},
  { question: "How does this project compare to other renewable energy sources?", answer: "This project provides a complementary solution to existing renewable sources like solar and wind power. It can be implemented in areas where those options might not be practical."},
  { question: "What else can I find on this website?", answer: "Our website offers a wealth of information.  Explore the About Renewable Resources section to learn more about sustainable energy solutions."},
  { question: "How do I use this website?", answer: "The website is easy to navigate.  Start by logging in (if required) and explore the Home screen with the project video and feedback form."},
  { question: "What can I do with the feedback form?", answer: "Use the feedback form to share your thoughts on our project! Your input is valuable for future development."},
  { question: "How can this chatbot help me?", answer: "I'm happy to answer any questions you have about the project, website, or renewable energy in general. Feel free to ask!"},
  { question: "Is there anything else I should know?", answer: "We believe this project has the potential to make a positive impact on the future of energy generation. Stay tuned for future updates as we continue development!"},
];

const createChatLi = (message, className, isUserMessage = false) => {
  // Create a chat <li> element with passed message and className
  const chatLi = document.createElement("li");
  chatLi.classList.add("chat", `${className}`);
  let chatContent = isUserMessage ? `<p>${message}</p>` : `<span class="material-symbols-outlined">smart_toy</span><p>${message}</p>`;
  chatLi.innerHTML = chatContent;
  return chatLi; // return chat <li> element
}

const handlePredefinedResponse = (question) => {
  const predefinedMatch = predefinedMessages.find(message => message.question === question);
  if (predefinedMatch) {
    const userChatLi = createChatLi(question, "outgoing", true);
    const botChatLi = createChatLi(predefinedMatch.answer, "incoming");
    chatbox.appendChild(userChatLi);
    chatbox.appendChild(botChatLi);
    chatbox.scrollTo(0, chatbox.scrollHeight);
  }
}

const handleChat = () => {
  userMessage = chatInput.value.trim(); // Get user entered message and remove extra whitespace
  if (!userMessage) return;

  // Clear the input textarea and set its height to default
  chatInput.value = "";
  chatInput.style.height = `${inputInitHeight}px`;

  // Check for predefined question clicks first
  const clickedPredefined = document.querySelector(".predefined-question.clicked");
  if (clickedPredefined) {
    handlePredefinedResponse(clickedPredefined.textContent.trim());
    clickedPredefined.classList.remove("clicked"); // Reset clicked state
    return;
  }

  const predefinedQuestionMatch = predefinedMessages.find(message => message.question.toLowerCase() === userMessage.toLowerCase());

  if (predefinedQuestionMatch) {
    handlePredefinedResponse(predefinedQuestionMatch.question);
  } else {
    // If no predefined question matched, respond with a default message
    const defaultResponse = "Sorry, I couldn't answer that.";
    const userChatLi = createChatLi(userMessage, "outgoing", true);
    const botChatLi = createChatLi(defaultResponse, "incoming");
    chatbox.appendChild(userChatLi);
    chatbox.appendChild(botChatLi);
    chatbox.scrollTo(0, chatbox.scrollHeight);
  }
  // If no predefined question clicked, handle user input as usual
  // ... rest of your existing handleChat logic for OpenAI API integration ...
}

const handlePredefinedQuestionClick = (event) => {
  const target = event.target;
  if (target.classList.contains("predefined-question")) {
    target.classList.toggle("clicked"); // Toggle clicked state for visual feedback
  }
}

chatInput.addEventListener("input", () => {
  // Adjust the height of the input textarea based on its content
  chatInput.style.height = `${inputInitHeight}px`;
  chatInput.style.height = `${chatInput.scrollHeight}px`;
});

chatInput.addEventListener("keydown", (e) => {
  // If Enter key is pressed without Shift key and the window 
  // width is greater than 800px, handle the chat
  if(e.key === "Enter" && !e.shiftKey && window.innerWidth > 800) {
    e.preventDefault();
    handleChat();
  }
});

sendChatBtn.addEventListener("click", handleChat);
closeBtn.addEventListener("click", () => document.body.classList.remove("show-chatbot"));
chatbotToggler.addEventListener("click", () => document.body.classList.toggle("show-chatbot"));
